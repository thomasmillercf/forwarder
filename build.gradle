plugins {
    id("org.jetbrains.kotlin.jvm") version "1.6.21"
    id("org.jetbrains.kotlin.kapt") version "1.6.21"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.6.21"
    id("io.micronaut.application") version "3.6.0"
    id("com.microsoft.azure.azurefunctions") version "1.8.2"
}

version = "0.1"
group = "com.marksandspencer.identity"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.kotlin:micronaut-kotlin-extension-functions")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

    testImplementation("io.micronaut:micronaut-http-client")

}


application {
    mainClass.set("com.marksandspencer.identity.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    azurefunctions {
        resourceGroup = "java-functions-group"
        appName = "forwarder"
        pricingTier = "Consumption"
        region = "westus"
        runtime {
          os = "linux"
        }
        localDebug = "transport=dt_socket,server=y,suspend=n,address=5005"
}
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("azure_function")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.marksandspencer.identity.*")
    }
}



